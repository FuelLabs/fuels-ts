/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.89.2
  Forc version: 0.60.0
  Fuel-Core version: 0.28.0
*/

import {
  BigNumberish,
  BN,
  InputValue,
  Predicate,
  Provider,
} from 'fuels';

export type TestPredicateAbiConfigurables = {
};

export type TestPredicateAbiInputs = [password: BigNumberish];

const _abi = {
  "encoding": "1",
  "types": [
    {
      "typeId": 0,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "password",
          "type": 1,
          "typeArguments": null
        }
      ],
      "name": "main",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
}

const _bin = '0x1af030007400000200000000000001c05dffc00110ffff001aec5000910000e0714000035fed00145d4bb014614122005047b0285e4500005043b0285c41000013410000764000145043b0285c4100005c47f0001341044076400001360000006141224a5fed00175043b0b85047b01872480008284504805fec00045043b0307248001028411480504bb0407244001028490440740000096141220c5fed00155043b0a87244000828ed04405fec0001504bb04072400010284bb4005043b05072440010284124405047b06072480010284504805043b08872480010284114805043b0885d47b00c5d4bb00d1b481480104514805fed10165d47f0015fed10185d47b0125d4bb018104514805fed1013760000155d47b01813451040764400095d47b0165d4510005fed101b5047b0985041000872480008284114805d43b01b740000085d47b0165c4510005fed101a5047b0985041000872480008284114805d43b01a740000075d47b0165fed10195047b0985041000872480008284114805d43b019504bb0105fed00025043b07072440008284124405047b07872480008284504805043b08072480008284114805d43b0105d47f0021341044024400000020000000000000000000000000000080000000000000539'

export const TestPredicateAbi__factory = {

  abi: _abi,
  bin: _bin,

  createInstance(provider: Provider, predicateData?: TestPredicateAbiInputs, configurables?: TestPredicateAbiConfigurables) {

    const predicate = new Predicate<TestPredicateAbiInputs>({
      bytecode: _bin,
      abi: _abi,
      provider,
      inputData: predicateData,
      configurableConstants: configurables,
    })

    return predicate;

  }

}
