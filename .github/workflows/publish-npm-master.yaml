# This workflow publishes packages to NPM tag `master` when specified Git branches are pushed.
#
# Packages published by this workflow:
# - are meant to be used for testing and experimentation
# - are versioned as `0.0.0-master-GIT_HASH`
# - can be installed with `pnpm add name@master` to get the latest version
# - can be installed with `pnpm add name@0.0.0-master-GIT_HASH` to get a specific version
# - will not be installed with `pnpm add name` (or `pnpm add name@latest`)
on:
  push:
    branches:
      - master
name: "Publish to NPM Tag `master`"
env:
  NPM_TAG: master
jobs:
  publish:
    name: "Publish to NPM"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
          registry-url: "https://registry.npmjs.org"

      - name: Ensure NPM access
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache PNPM modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.1.0
        with:
          version: 7.0.0
          run_install: true

      - name: Run ESLint and Build
        run: |
          pnpm build
          pnpm lint

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Test Coverage
        run: pnpm ci:test-coverage

      - name: Publish to NPM
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          pnpm release:pre --ref=$REF --sha=$GITHUB_SHA --tag=$TAG
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          TAG: ${{ env.NPM_TAG }}
          REF: ${{ github.ref_name }}
