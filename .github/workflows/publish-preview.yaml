name: "Publish to Vercel"

on:
  pull_request:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_TS_DOCS_PROJECT_ID: 'prj_iBhTlkv2hj2E6BiA3GeacxgNHIEL'
  VERCEL_TS_DOCS_API_PROJECT_ID: 'prj_hBydWalwFfqTPkpKTIy82abixInS'
  VERCEL_TS_TEMPLATE_PROJECT_ID: 'prj_syuKtl2KTIU4OvO2mRccdbIt55BN'

jobs:
  publish-to-vercel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: CI Setup
        uses: ./.github/actions/ci-setup
      
      - name: Install Vercel
        run: pnpm install --global vercel@latest

      - name: Build project
        run: pnpm build

      - name: Deploy `docs` to Vercel
        id: deploy-docs
        continue-on-error: true
        uses: ./.github/actions/vercel-deploy
        with:
          token: ${{ secrets.VERCEL_TOKEN }}
          project-id: ${{ env.VERCEL_TS_DOCS_PROJECT_ID }}

      - name: Deploy `docs-api` to Vercel
        id: deploy-docs-api
        continue-on-error: true
        uses: ./.github/actions/vercel-deploy
        with:
          token: ${{ secrets.VERCEL_TOKEN }}
          project-id: ${{ env.VERCEL_TS_DOCS_API_PROJECT_ID }}

      - name: Deploy `template` to Vercel
        id: deploy-template
        continue-on-error: true
        uses: ./.github/actions/vercel-deploy
        with:
          token: ${{ secrets.VERCEL_TOKEN }}
          project-id: ${{ env.VERCEL_TS_TEMPLATE_PROJECT_ID }}

      - name: Add PR comment
        uses: mshick/add-pr-comment@v2
        with:
          refresh-message-position: false
          message: |
            # Vercel Deployment

            | Name | Preview |
            | :--- | :------ |
            | **fuels-template** | ${{ steps.deploy-template.outcome == 'success' && 'Success ✅ ([Preview](${{steps.deploy-template.outputs.deployment-url}}))' || 'Failed ❌' }}  |
            | **ts-docs** | ${{ steps.deploy-docs.outcome == 'success' && 'Success ✅ ([Preview](${{steps.deploy-template.outputs.deployment-url}}))' || 'Failed ❌' }} |
            | **ts-docs-api** | ${{ steps.deploy-docs-api.outcome == 'success' && 'Success ✅ ([Preview](${{steps.deploy-template.outputs.deployment-url}}))' || 'Failed ❌' }} |

      - name: Ensure all deployments successful
        if: ${{ steps.deploy-template.outcome != 'success' || steps.deploy-docs.outcome != 'success' || steps.deploy-docs-api.outcome != 'success' }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('One of the Vercel deployments failed')