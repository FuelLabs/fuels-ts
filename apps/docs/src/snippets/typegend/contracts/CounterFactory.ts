/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.96.1
  Forc version: 0.66.4
  Fuel-Core version: 0.40.0
*/

import { Contract, ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { Counter } from "./Counter";

const bytecode = decompressBytecode("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");

export class CounterFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, Counter.abi, accountOrProvider);
  }

  override deploy<TContract extends Contract = Contract>(
    deployOptions?: DeployContractOptions
  ): Promise<DeployContractResult<TContract>> {
    return super.deploy({
      storageSlots: Counter.storageSlots,
      ...deployOptions,
    });
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<Counter>> {
    const factory = new CounterFactory(wallet);
    return factory.deploy(options);
  }
}
