/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.96.1
  Forc version: 0.66.4
  Fuel-Core version: 0.40.0
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  AbstractAddress,
  EvmAddress,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

export type EchoEvmAddressConfigurables = Partial<{
  B256_ADDR: string;
}>;

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "struct std::vm::evm::evm_address::EvmAddress",
      "concreteTypeId": "05a44d8c3e00faf7ed545823b7a2b32723545d8715d87a0ab3cf65904948e8d2",
      "metadataTypeId": 0
    }
  ],
  "metadataTypes": [
    {
      "type": "struct std::vm::evm::evm_address::EvmAddress",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "echo_address",
      "output": "05a44d8c3e00faf7ed545823b7a2b32723545d8715d87a0ab3cf65904948e8d2",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "evm_addr",
          "concreteTypeId": "05a44d8c3e00faf7ed545823b7a2b32723545d8715d87a0ab3cf65904948e8d2"
        }
      ],
      "name": "echo_address_comparison",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "B256_ADDR",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      "offset": 2744
    }
  ]
};

const storageSlots: StorageSlot[] = [];

export class EchoEvmAddressInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    echo_address: FunctionFragment;
    echo_address_comparison: FunctionFragment;
  };
}

export class EchoEvmAddress extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: EchoEvmAddressInterface;
  declare functions: {
    echo_address: InvokeFunction<[], EvmAddress>;
    echo_address_comparison: InvokeFunction<[evm_addr: EvmAddress], boolean>;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
