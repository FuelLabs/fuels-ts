/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.96.1
  Forc version: 0.66.4
  Fuel-Core version: 0.40.0
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  AbstractAddress,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
  StrSlice,
} from 'fuels';

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "(u8, bool, u64)",
      "concreteTypeId": "57a069d3cc871af21c6637436a8b24d3ca9501f5a4c581c0ad05913fa28fac2c",
      "metadataTypeId": 0
    },
    {
      "type": "[u64; 2]",
      "concreteTypeId": "4936d108619f9cd75cdeea2f3fe11241b06d22b856d4b61fa3ae412370b10a6a",
      "metadataTypeId": 2
    },
    {
      "type": "str",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    },
    {
      "type": "str[8]",
      "concreteTypeId": "fd59cdd2c531ab3564f4fcc13eb876860d4d7cd4d12aa1f042a5aeceacde951f"
    },
    {
      "type": "struct std::b512::B512",
      "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322",
      "metadataTypeId": 5
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    },
    {
      "type": "u8",
      "concreteTypeId": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b"
    }
  ],
  "metadataTypes": [
    {
      "type": "(_, _, _)",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b"
        },
        {
          "name": "__tuple_element",
          "typeId": 4
        },
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "[_; 2]",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "__array_element",
          "typeId": 3
        }
      ]
    },
    {
      "type": "[_; 2]",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "__array_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "b256",
      "metadataTypeId": 3
    },
    {
      "type": "bool",
      "metadataTypeId": 4
    },
    {
      "type": "struct std::b512::B512",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "bits",
          "typeId": 1
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "input",
          "concreteTypeId": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322"
        }
      ],
      "name": "echo_b512",
      "output": "745e252e80bec590efc3999ae943f07ccea4d5b45b00bb6575499b64abdd3322",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "value",
          "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
        }
      ],
      "name": "echo_str",
      "output": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "value",
          "concreteTypeId": "fd59cdd2c531ab3564f4fcc13eb876860d4d7cd4d12aa1f042a5aeceacde951f"
        }
      ],
      "name": "echo_str_8",
      "output": "fd59cdd2c531ab3564f4fcc13eb876860d4d7cd4d12aa1f042a5aeceacde951f",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "tuple",
          "concreteTypeId": "57a069d3cc871af21c6637436a8b24d3ca9501f5a4c581c0ad05913fa28fac2c"
        }
      ],
      "name": "echo_tuple",
      "output": "57a069d3cc871af21c6637436a8b24d3ca9501f5a4c581c0ad05913fa28fac2c",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "value",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "echo_u64",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "u64_array",
          "concreteTypeId": "4936d108619f9cd75cdeea2f3fe11241b06d22b856d4b61fa3ae412370b10a6a"
        }
      ],
      "name": "echo_u64_array",
      "output": "4936d108619f9cd75cdeea2f3fe11241b06d22b856d4b61fa3ae412370b10a6a",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "value",
          "concreteTypeId": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b"
        }
      ],
      "name": "echo_u8",
      "output": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [];

export class EchoValuesInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    echo_b512: FunctionFragment;
    echo_str: FunctionFragment;
    echo_str_8: FunctionFragment;
    echo_tuple: FunctionFragment;
    echo_u64: FunctionFragment;
    echo_u64_array: FunctionFragment;
    echo_u8: FunctionFragment;
  };
}

export class EchoValues extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: EchoValuesInterface;
  declare functions: {
    echo_b512: InvokeFunction<[input: string], string>;
    echo_str: InvokeFunction<[value: StrSlice], StrSlice>;
    echo_str_8: InvokeFunction<[value: string], string>;
    echo_tuple: InvokeFunction<[tuple: [BigNumberish, boolean, BigNumberish]], [number, boolean, BN]>;
    echo_u64: InvokeFunction<[value: BigNumberish], BN>;
    echo_u64_array: InvokeFunction<[u64_array: [BigNumberish, BigNumberish]], [BN, BN]>;
    echo_u8: InvokeFunction<[value: BigNumberish], number>;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
