/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.96.1
  Forc version: 0.66.4
  Fuel-Core version: 0.40.0
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  AbstractAddress,
  BigNumberish,
  BN,
  Bytes,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "struct std::bytes::Bytes",
      "concreteTypeId": "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb",
      "metadataTypeId": 1
    }
  ],
  "metadataTypes": [
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 0
    },
    {
      "type": "struct std::bytes::Bytes",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "buf",
          "typeId": 2
        },
        {
          "name": "len",
          "typeId": 3
        }
      ]
    },
    {
      "type": "struct std::bytes::RawBytes",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "ptr",
          "typeId": 0
        },
        {
          "name": "cap",
          "typeId": 3
        }
      ]
    },
    {
      "type": "u64",
      "metadataTypeId": 3
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "value",
          "concreteTypeId": "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb"
        }
      ],
      "name": "bytes_comparison",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "value",
          "concreteTypeId": "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb"
        }
      ],
      "name": "echo_bytes",
      "output": "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [];

export class EchoBytesInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    bytes_comparison: FunctionFragment;
    echo_bytes: FunctionFragment;
  };
}

export class EchoBytes extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: EchoBytesInterface;
  declare functions: {
    bytes_comparison: InvokeFunction<[value: Bytes], boolean>;
    echo_bytes: InvokeFunction<[value: Bytes], Bytes>;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
