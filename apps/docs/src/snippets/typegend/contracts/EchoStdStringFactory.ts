/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.96.1
  Forc version: 0.66.4
  Fuel-Core version: 0.40.0
*/

import { Contract, ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { EchoStdString } from "./EchoStdString";

const bytecode = decompressBytecode("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");

export class EchoStdStringFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, EchoStdString.abi, accountOrProvider);
  }

  override deploy<TContract extends Contract = Contract>(
    deployOptions?: DeployContractOptions
  ): Promise<DeployContractResult<TContract>> {
    return super.deploy({
      storageSlots: EchoStdString.storageSlots,
      ...deployOptions,
    });
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<EchoStdString>> {
    const factory = new EchoStdStringFactory(wallet);
    return factory.deploy(options);
  }
}
