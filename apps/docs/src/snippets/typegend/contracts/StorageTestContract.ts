/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.96.1
  Forc version: 0.66.4
  Fuel-Core version: 0.40.0
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  AbstractAddress,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

export type StructValidationInput = { v1: boolean, v2: BigNumberish };
export type StructValidationOutput = { v1: boolean, v2: BN };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "struct StructValidation",
      "concreteTypeId": "ec53def0326d7b28c6a11e8a44d21c7a824882d284cf631e06d0ada5fee2544c",
      "metadataTypeId": 0
    },
    {
      "type": "u16",
      "concreteTypeId": "29881aad8730c5ab11d275376323d8e4ff4179aae8ccb6c13fe4902137e162ef"
    },
    {
      "type": "u32",
      "concreteTypeId": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc"
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "struct StructValidation",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "v1",
          "typeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
        },
        {
          "name": "v2",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "counter",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "increment_counter",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "value",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "initialize_counter",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "return_b256",
      "output": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "return_true",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    },
    {
      "inputs": [],
      "name": "return_var1",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "return_var2",
      "output": "d7649d428b9ff33d188ecbf38a7e4d8fd167fa01b2e10fe9a8f9308e52f1d7cc",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "return_var3",
      "output": "29881aad8730c5ab11d275376323d8e4ff4179aae8ccb6c13fe4902137e162ef",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "return_var4",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "return_var5",
      "output": "ec53def0326d7b28c6a11e8a44d21c7a824882d284cf631e06d0ada5fee2544c",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "413002d645e02192634bf376e9129bda10b9ad3f8ce33755a755c976d7bd566a",
    "value": "0100000000000000000000000000003200000000000000000000000000000000"
  },
  {
    "key": "5ede19f60e14b0cd269a48a9f8765d74d475f4dd6b3789ceab625badaf2ad9b0",
    "value": "0000000000000014000000000000000000000000000000000000000000000000"
  },
  {
    "key": "a5459b157bdad164e5e8fd6d33ade086482fc9e21f82955a4be90fb63eb5be6e",
    "value": "0100000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "c8c4bd84a635f52013ca74eb5f198973c159a67e946a018c430f2cf8861280ec",
    "value": "000000000000001e000000000000000000000000000000000000000000000000"
  },
  {
    "key": "fb8482ba5872da7519bf6b1d15e5deb86d892c4594c5129783b8f90858579331",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class StorageTestContractInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    counter: FunctionFragment;
    increment_counter: FunctionFragment;
    initialize_counter: FunctionFragment;
    return_b256: FunctionFragment;
    return_true: FunctionFragment;
    return_var1: FunctionFragment;
    return_var2: FunctionFragment;
    return_var3: FunctionFragment;
    return_var4: FunctionFragment;
    return_var5: FunctionFragment;
  };
}

export class StorageTestContract extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: StorageTestContractInterface;
  declare functions: {
    counter: InvokeFunction<[], BN>;
    increment_counter: InvokeFunction<[amount: BigNumberish], BN>;
    initialize_counter: InvokeFunction<[value: BigNumberish], BN>;
    return_b256: InvokeFunction<[], string>;
    return_true: InvokeFunction<[], boolean>;
    return_var1: InvokeFunction<[], BN>;
    return_var2: InvokeFunction<[], number>;
    return_var3: InvokeFunction<[], number>;
    return_var4: InvokeFunction<[], boolean>;
    return_var5: InvokeFunction<[], StructValidationOutput>;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
