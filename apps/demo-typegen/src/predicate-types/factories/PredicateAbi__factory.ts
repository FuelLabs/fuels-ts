/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.65.0
  Forc version: 0.46.1
  Fuel-Core version: 0.20.8
*/

import {
  BigNumberish,
  Predicate,
  Provider,
} from 'fuels';

export type PredicateAbiConfigurables = {
};

type PredicateAbiInputs = [input: BigNumberish];

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "u8",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "input",
          "type": 1,
          "typeArguments": null
        }
      ],
      "name": "main",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
}

const _bin = '0x740000034700000000000000000000645dfcc00110fff3001aec5000910000007144000361491101764800026141110d74000007724c0002134924c05a492001764800026141111f74000001240000005d4100005d47f000134104402440000047000000000000000000000a'

export class PredicateAbi__factory {

  static readonly abi = _abi
  static readonly bin = _bin;

  static createInstance(provider: Provider, configurables?: PredicateAbiConfigurables) {

    const { abi, bin } = PredicateAbi__factory

    const predicate = new Predicate(bin, provider, abi, configurables);

    return predicate;

  }

}
