/* Autogenerated file. Do not edit manually. */

/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */

/*
  Fuels version: 0.98.0
  Forc version: 0.66.5
*/

import { type StrSlice } from '@fuel-ts/abi-coder';
import type { Enum, Option } from '../common';

export enum AccessError {
  NotOwner = 'NotOwner',
}
export enum InitializationError {
  CannotReinitialized = 'CannotReinitialized',
}
export enum SetProxyOwnerError {
  CannotUninitialize = 'CannotUninitialize',
}

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type IdentityInput = Enum<{ Address: AddressInput; ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput; ContractId: ContractIdOutput }>;
export type ProxyOwnerSetInput = { new_proxy_owner: StateInput };
export type ProxyOwnerSetOutput = { new_proxy_owner: StateOutput };
export type ProxyTargetSetInput = { new_target: ContractIdInput };
export type ProxyTargetSetOutput = { new_target: ContractIdOutput };
export type StateInput = Enum<{
  Uninitialized: undefined;
  Initialized: IdentityInput;
  Revoked: undefined;
}>;
export type StateOutput = Enum<{ Uninitialized: void; Initialized: IdentityOutput; Revoked: void }>;

export interface Src14OwnedProxyTypes {
  functions: {
    proxy_target: {
      inputs: [];
      output: Option<ContractIdOutput>;
    };
    set_proxy_target: {
      inputs: [new_target: ContractIdInput];
      output: void;
    };
    proxy_owner: {
      inputs: [];
      output: StateOutput;
    };
    initialize_proxy: {
      inputs: [];
      output: void;
    };
    set_proxy_owner: {
      inputs: [new_proxy_owner: StateInput];
      output: void;
    };
  };
  configurables: Partial<{
    INITIAL_TARGET: Option<ContractIdInput>;
    INITIAL_OWNER: StateInput;
  }>;
}
