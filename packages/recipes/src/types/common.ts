/* Autogenerated file. Do not edit manually. */

/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */

/*
  Fuels version: 0.98.0
  Forc version: 0.66.5
*/

import { type AbiCoderFunction } from '@fuel-ts/abi';
import { type InvokeFunction } from '@fuel-ts/program';

/**
 * Mimics Sway Enum.
 * Requires one and only one Key-Value pair and raises error if more are provided.
 */
export type Enum<T> = {
  [K in keyof T]: Pick<T, K> & { [P in Exclude<keyof T, K>]?: never };
}[keyof T];

/**
 * Mimics Sway Option type.
 */
export type Option<T> = T | undefined;

/**
 * Mimics Sway Result enum type.
 * Ok represents the success case, while Err represents the error case.
 */
export type Result<T, E> = Enum<{ Ok: T; Err: E }>;

/**
 * Mimics Sway array type. For example, [u64; 10] is converted to ArrayOfLength<BigNumberish, 10>.
 */
export type ArrayOfLength<
  T,
  Length extends number,
  Arr extends unknown[] = [],
> = Arr['length'] extends Length ? Arr : ArrayOfLength<T, Length, [T, ...Arr]>;

interface Types {
  functions: Record<string, { inputs: unknown[]; output: unknown }>;
  configurables: Partial<Record<string, unknown>>;
}

export type ProgramFunctionMapper<T extends Types['functions']> = {
  [K in keyof T]: InvokeFunction<T[K]['inputs'], T[K]['output']>;
};

export type InterfaceFunctionMapper<T extends Types['functions']> = {
  [K in keyof T]: AbiCoderFunction;
};
