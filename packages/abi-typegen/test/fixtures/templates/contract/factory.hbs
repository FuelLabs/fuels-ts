/* eslint-disable max-classes-per-file */
/* Autogenerated file. Do not edit manually. */

/*
  Fuels version: 11.11.11
  Forc version: 22.22.22
  Fuel-Core version: 33.33.33
*/

import { ContractFactory } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { MyContract } from "./MyContract";

const bytecode = "0x-bytecode-here";

export class MyContractFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, MyContract.abi, accountOrProvider);
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<MyContract>> {
    const factory = new MyContractFactory(wallet);

    return factory.deployContract({
      storageSlots: MyContract.storageSlots,
      ...options,
    });
  }
}
