import type { Abi } from '../abi/Abi';

export function renderFactoryTemplate(params: { abi: Abi }) {
  const { name, rawContents } = params.abi;

  const output = `/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, BaseWalletLocked, AbstractAddress } from "fuels"
import type { ${name}, ${name}Interface } from "../${name}"
import { Interface, Contract } from "fuels"
const _abi = ${JSON.stringify(rawContents, null, 2)}

export class ${name}__factory {
  static readonly abi = _abi
  static createInterface(): ${name}Interface {
    return new Interface(_abi) as unknown as ${name}Interface
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider
  ): ${name} {
    return new Contract(id, _abi, walletOrProvider) as unknown as ${name}
  }
}`;

  return output;
}
