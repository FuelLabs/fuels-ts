/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_add_free(a: number): void;
export function add_new(a: number, b: number, c: number): number;
export function add_ra(a: number): number;
export function add_rb(a: number): number;
export function add_rc(a: number): number;
export function add(a: number, b: number, c: number): number;
export function and(a: number, b: number, c: number): number;
export function div(a: number, b: number, c: number): number;
export function eq(a: number, b: number, c: number): number;
export function exp(a: number, b: number, c: number): number;
export function gt(a: number, b: number, c: number): number;
export function lt(a: number, b: number, c: number): number;
export function mlog(a: number, b: number, c: number): number;
export function mroo(a: number, b: number, c: number): number;
export function mod_(a: number, b: number, c: number): number;
export function move_(a: number, b: number): number;
export function mul(a: number, b: number, c: number): number;
export function not(a: number, b: number): number;
export function or(a: number, b: number, c: number): number;
export function sll(a: number, b: number, c: number): number;
export function srl(a: number, b: number, c: number): number;
export function sub(a: number, b: number, c: number): number;
export function xor(a: number, b: number, c: number): number;
export function mldv(a: number, b: number, c: number, d: number): number;
export function ret(a: number): number;
export function retd(a: number, b: number): number;
export function aloc_new(a: number): number;
export function aloc(a: number): number;
export function mcl(a: number, b: number): number;
export function mcp(a: number, b: number, c: number): number;
export function meq(a: number, b: number, c: number, d: number): number;
export function bhsh_new(a: number, b: number): number;
export function bhsh(a: number, b: number): number;
export function bhei(a: number): number;
export function burn(a: number): number;
export function call_new(a: number, b: number, c: number, d: number): number;
export function call_rd(a: number): number;
export function call(a: number, b: number, c: number, d: number): number;
export function ccp(a: number, b: number, c: number, d: number): number;
export function croo(a: number, b: number): number;
export function csiz(a: number, b: number): number;
export function cb(a: number): number;
export function ldc(a: number, b: number, c: number): number;
export function log(a: number, b: number, c: number, d: number): number;
export function logd(a: number, b: number, c: number, d: number): number;
export function mint(a: number): number;
export function rvrt(a: number): number;
export function scwq(a: number, b: number, c: number): number;
export function srw(a: number, b: number, c: number): number;
export function srwq(a: number, b: number, c: number, d: number): number;
export function sww(a: number, b: number, c: number): number;
export function swwq(a: number, b: number, c: number, d: number): number;
export function tr(a: number, b: number, c: number): number;
export function tro(a: number, b: number, c: number, d: number): number;
export function ecr(a: number, b: number, c: number): number;
export function k256(a: number, b: number, c: number): number;
export function s256(a: number, b: number, c: number): number;
export function time(a: number, b: number): number;
export function noop_new(): number;
export function noop(): number;
export function flag(a: number): number;
export function bal(a: number, b: number, c: number): number;
export function jmp(a: number): number;
export function jne(a: number, b: number, c: number): number;
export function smo(a: number, b: number, c: number, d: number): number;
export function addi_new(a: number, b: number, c: number): number;
export function addi_imm12(a: number): number;
export function addi(a: number, b: number, c: number): number;
export function andi(a: number, b: number, c: number): number;
export function divi(a: number, b: number, c: number): number;
export function expi(a: number, b: number, c: number): number;
export function modi(a: number, b: number, c: number): number;
export function muli(a: number, b: number, c: number): number;
export function ori(a: number, b: number, c: number): number;
export function slli(a: number, b: number, c: number): number;
export function srli(a: number, b: number, c: number): number;
export function subi(a: number, b: number, c: number): number;
export function xori(a: number, b: number, c: number): number;
export function jnei(a: number, b: number, c: number): number;
export function lb(a: number, b: number, c: number): number;
export function lw(a: number, b: number, c: number): number;
export function sb(a: number, b: number, c: number): number;
export function sw(a: number, b: number, c: number): number;
export function mcpi(a: number, b: number, c: number): number;
export function gtf(a: number, b: number, c: number): number;
export function mcli(a: number, b: number): number;
export function gm_new(a: number, b: number): number;
export function gm_imm18(a: number): number;
export function gm(a: number, b: number): number;
export function movi(a: number, b: number): number;
export function jnzi(a: number, b: number): number;
export function jmpf(a: number, b: number): number;
export function jmpb(a: number, b: number): number;
export function jnzf(a: number, b: number, c: number): number;
export function jnzb(a: number, b: number, c: number): number;
export function jnef(a: number, b: number, c: number, d: number): number;
export function jneb(a: number, b: number, c: number, d: number): number;
export function ji(a: number): number;
export function cfei_new(a: number): number;
export function cfei_imm24(a: number): number;
export function cfei(a: number): number;
export function cfsi(a: number): number;
export function cfe(a: number): number;
export function cfs(a: number): number;
export function wdcm(a: number, b: number, c: number, d: number): number;
export function wqcm(a: number, b: number, c: number, d: number): number;
export function wdop(a: number, b: number, c: number, d: number): number;
export function wqop(a: number, b: number, c: number, d: number): number;
export function wdml(a: number, b: number, c: number, d: number): number;
export function wqml(a: number, b: number, c: number, d: number): number;
export function wddv(a: number, b: number, c: number, d: number): number;
export function wqdv(a: number, b: number, c: number, d: number): number;
export function wdmd(a: number, b: number, c: number, d: number): number;
export function wqmd(a: number, b: number, c: number, d: number): number;
export function wdam(a: number, b: number, c: number, d: number): number;
export function wqam(a: number, b: number, c: number, d: number): number;
export function wdmm(a: number, b: number, c: number, d: number): number;
export function wqmm(a: number, b: number, c: number, d: number): number;
export function mcli_imm18(a: number): number;
export function movi_imm18(a: number): number;
export function jnzi_imm18(a: number): number;
export function jmpf_imm18(a: number): number;
export function jmpb_imm18(a: number): number;
export function ji_imm24(a: number): number;
export function cfsi_imm24(a: number): number;
export function mcli_new(a: number, b: number): number;
export function movi_new(a: number, b: number): number;
export function jnzi_new(a: number, b: number): number;
export function jmpf_new(a: number, b: number): number;
export function jmpb_new(a: number, b: number): number;
export function not_new(a: number, b: number): number;
export function retd_new(a: number, b: number): number;
export function move_new(a: number, b: number): number;
export function mcl_new(a: number, b: number): number;
export function croo_new(a: number, b: number): number;
export function csiz_new(a: number, b: number): number;
export function time_new(a: number, b: number): number;
export function ji_new(a: number): number;
export function cfsi_new(a: number): number;
export function andi_new(a: number, b: number, c: number): number;
export function divi_new(a: number, b: number, c: number): number;
export function expi_new(a: number, b: number, c: number): number;
export function modi_new(a: number, b: number, c: number): number;
export function muli_new(a: number, b: number, c: number): number;
export function ori_new(a: number, b: number, c: number): number;
export function slli_new(a: number, b: number, c: number): number;
export function srli_new(a: number, b: number, c: number): number;
export function subi_new(a: number, b: number, c: number): number;
export function xori_new(a: number, b: number, c: number): number;
export function jnei_new(a: number, b: number, c: number): number;
export function lb_new(a: number, b: number, c: number): number;
export function lw_new(a: number, b: number, c: number): number;
export function sb_new(a: number, b: number, c: number): number;
export function sw_new(a: number, b: number, c: number): number;
export function mcpi_new(a: number, b: number, c: number): number;
export function gtf_new(a: number, b: number, c: number): number;
export function jnzf_new(a: number, b: number, c: number): number;
export function jnzb_new(a: number, b: number, c: number): number;
export function andi_imm12(a: number): number;
export function divi_imm12(a: number): number;
export function expi_imm12(a: number): number;
export function modi_imm12(a: number): number;
export function muli_imm12(a: number): number;
export function ori_imm12(a: number): number;
export function slli_imm12(a: number): number;
export function srli_imm12(a: number): number;
export function subi_imm12(a: number): number;
export function xori_imm12(a: number): number;
export function jnei_imm12(a: number): number;
export function lb_imm12(a: number): number;
export function lw_imm12(a: number): number;
export function sb_imm12(a: number): number;
export function sw_imm12(a: number): number;
export function mcpi_imm12(a: number): number;
export function gtf_imm12(a: number): number;
export function jnzf_imm12(a: number): number;
export function jnzb_imm12(a: number): number;
export function and_new(a: number, b: number, c: number): number;
export function div_new(a: number, b: number, c: number): number;
export function eq_new(a: number, b: number, c: number): number;
export function exp_new(a: number, b: number, c: number): number;
export function gt_new(a: number, b: number, c: number): number;
export function lt_new(a: number, b: number, c: number): number;
export function mlog_new(a: number, b: number, c: number): number;
export function mroo_new(a: number, b: number, c: number): number;
export function mod_new(a: number, b: number, c: number): number;
export function mul_new(a: number, b: number, c: number): number;
export function or_new(a: number, b: number, c: number): number;
export function sll_new(a: number, b: number, c: number): number;
export function srl_new(a: number, b: number, c: number): number;
export function sub_new(a: number, b: number, c: number): number;
export function xor_new(a: number, b: number, c: number): number;
export function mcp_new(a: number, b: number, c: number): number;
export function ldc_new(a: number, b: number, c: number): number;
export function scwq_new(a: number, b: number, c: number): number;
export function srw_new(a: number, b: number, c: number): number;
export function sww_new(a: number, b: number, c: number): number;
export function tr_new(a: number, b: number, c: number): number;
export function ecr_new(a: number, b: number, c: number): number;
export function k256_new(a: number, b: number, c: number): number;
export function s256_new(a: number, b: number, c: number): number;
export function bal_new(a: number, b: number, c: number): number;
export function jne_new(a: number, b: number, c: number): number;
export function ret_new(a: number): number;
export function bhei_new(a: number): number;
export function burn_new(a: number): number;
export function cb_new(a: number): number;
export function mint_new(a: number): number;
export function rvrt_new(a: number): number;
export function flag_new(a: number): number;
export function jmp_new(a: number): number;
export function cfe_new(a: number): number;
export function cfs_new(a: number): number;
export function and_rb(a: number): number;
export function div_rb(a: number): number;
export function eq_rb(a: number): number;
export function exp_rb(a: number): number;
export function gt_rb(a: number): number;
export function lt_rb(a: number): number;
export function mlog_rb(a: number): number;
export function mroo_rb(a: number): number;
export function mod_rb(a: number): number;
export function move_rb(a: number): number;
export function mul_rb(a: number): number;
export function not_rb(a: number): number;
export function or_rb(a: number): number;
export function sll_rb(a: number): number;
export function srl_rb(a: number): number;
export function sub_rb(a: number): number;
export function xor_rb(a: number): number;
export function mldv_rb(a: number): number;
export function retd_rb(a: number): number;
export function mcl_rb(a: number): number;
export function mcp_rb(a: number): number;
export function meq_rb(a: number): number;
export function bhsh_rb(a: number): number;
export function call_rb(a: number): number;
export function ccp_rb(a: number): number;
export function croo_rb(a: number): number;
export function csiz_rb(a: number): number;
export function ldc_rb(a: number): number;
export function log_rb(a: number): number;
export function logd_rb(a: number): number;
export function scwq_rb(a: number): number;
export function srw_rb(a: number): number;
export function srwq_rb(a: number): number;
export function sww_rb(a: number): number;
export function swwq_rb(a: number): number;
export function tr_rb(a: number): number;
export function tro_rb(a: number): number;
export function ecr_rb(a: number): number;
export function k256_rb(a: number): number;
export function s256_rb(a: number): number;
export function time_rb(a: number): number;
export function bal_rb(a: number): number;
export function jne_rb(a: number): number;
export function smo_rb(a: number): number;
export function addi_rb(a: number): number;
export function andi_rb(a: number): number;
export function divi_rb(a: number): number;
export function expi_rb(a: number): number;
export function modi_rb(a: number): number;
export function muli_rb(a: number): number;
export function ori_rb(a: number): number;
export function slli_rb(a: number): number;
export function srli_rb(a: number): number;
export function subi_rb(a: number): number;
export function xori_rb(a: number): number;
export function jnei_rb(a: number): number;
export function lb_rb(a: number): number;
export function lw_rb(a: number): number;
export function sb_rb(a: number): number;
export function sw_rb(a: number): number;
export function mcpi_rb(a: number): number;
export function gtf_rb(a: number): number;
export function jnzf_rb(a: number): number;
export function jnzb_rb(a: number): number;
export function jnef_rb(a: number): number;
export function jneb_rb(a: number): number;
export function wdcm_rb(a: number): number;
export function wqcm_rb(a: number): number;
export function wdop_rb(a: number): number;
export function wqop_rb(a: number): number;
export function wdml_rb(a: number): number;
export function wqml_rb(a: number): number;
export function wddv_rb(a: number): number;
export function wqdv_rb(a: number): number;
export function wdmd_rb(a: number): number;
export function wqmd_rb(a: number): number;
export function wdam_rb(a: number): number;
export function wqam_rb(a: number): number;
export function wdmm_rb(a: number): number;
export function wqmm_rb(a: number): number;
export function and_ra(a: number): number;
export function div_ra(a: number): number;
export function eq_ra(a: number): number;
export function exp_ra(a: number): number;
export function gt_ra(a: number): number;
export function lt_ra(a: number): number;
export function mlog_ra(a: number): number;
export function mroo_ra(a: number): number;
export function mod_ra(a: number): number;
export function move_ra(a: number): number;
export function mul_ra(a: number): number;
export function not_ra(a: number): number;
export function or_ra(a: number): number;
export function sll_ra(a: number): number;
export function srl_ra(a: number): number;
export function sub_ra(a: number): number;
export function xor_ra(a: number): number;
export function mldv_ra(a: number): number;
export function ret_ra(a: number): number;
export function retd_ra(a: number): number;
export function aloc_ra(a: number): number;
export function mcl_ra(a: number): number;
export function mcp_ra(a: number): number;
export function meq_ra(a: number): number;
export function bhsh_ra(a: number): number;
export function bhei_ra(a: number): number;
export function burn_ra(a: number): number;
export function call_ra(a: number): number;
export function ccp_ra(a: number): number;
export function croo_ra(a: number): number;
export function csiz_ra(a: number): number;
export function cb_ra(a: number): number;
export function ldc_ra(a: number): number;
export function log_ra(a: number): number;
export function logd_ra(a: number): number;
export function mint_ra(a: number): number;
export function rvrt_ra(a: number): number;
export function scwq_ra(a: number): number;
export function srw_ra(a: number): number;
export function srwq_ra(a: number): number;
export function sww_ra(a: number): number;
export function swwq_ra(a: number): number;
export function tr_ra(a: number): number;
export function tro_ra(a: number): number;
export function ecr_ra(a: number): number;
export function k256_ra(a: number): number;
export function s256_ra(a: number): number;
export function time_ra(a: number): number;
export function flag_ra(a: number): number;
export function bal_ra(a: number): number;
export function jmp_ra(a: number): number;
export function jne_ra(a: number): number;
export function smo_ra(a: number): number;
export function addi_ra(a: number): number;
export function andi_ra(a: number): number;
export function divi_ra(a: number): number;
export function expi_ra(a: number): number;
export function modi_ra(a: number): number;
export function muli_ra(a: number): number;
export function ori_ra(a: number): number;
export function slli_ra(a: number): number;
export function srli_ra(a: number): number;
export function subi_ra(a: number): number;
export function xori_ra(a: number): number;
export function jnei_ra(a: number): number;
export function lb_ra(a: number): number;
export function lw_ra(a: number): number;
export function sb_ra(a: number): number;
export function sw_ra(a: number): number;
export function mcpi_ra(a: number): number;
export function gtf_ra(a: number): number;
export function mcli_ra(a: number): number;
export function gm_ra(a: number): number;
export function movi_ra(a: number): number;
export function jnzi_ra(a: number): number;
export function jmpf_ra(a: number): number;
export function jmpb_ra(a: number): number;
export function jnzf_ra(a: number): number;
export function jnzb_ra(a: number): number;
export function jnef_ra(a: number): number;
export function jneb_ra(a: number): number;
export function cfe_ra(a: number): number;
export function cfs_ra(a: number): number;
export function wdcm_ra(a: number): number;
export function wqcm_ra(a: number): number;
export function wdop_ra(a: number): number;
export function wqop_ra(a: number): number;
export function wdml_ra(a: number): number;
export function wqml_ra(a: number): number;
export function wddv_ra(a: number): number;
export function wqdv_ra(a: number): number;
export function wdmd_ra(a: number): number;
export function wqmd_ra(a: number): number;
export function wdam_ra(a: number): number;
export function wqam_ra(a: number): number;
export function wdmm_ra(a: number): number;
export function wqmm_ra(a: number): number;
export function mldv_new(a: number, b: number, c: number, d: number): number;
export function meq_new(a: number, b: number, c: number, d: number): number;
export function ccp_new(a: number, b: number, c: number, d: number): number;
export function log_new(a: number, b: number, c: number, d: number): number;
export function logd_new(a: number, b: number, c: number, d: number): number;
export function srwq_new(a: number, b: number, c: number, d: number): number;
export function swwq_new(a: number, b: number, c: number, d: number): number;
export function tro_new(a: number, b: number, c: number, d: number): number;
export function smo_new(a: number, b: number, c: number, d: number): number;
export function jnef_new(a: number, b: number, c: number, d: number): number;
export function jneb_new(a: number, b: number, c: number, d: number): number;
export function wdcm_new(a: number, b: number, c: number, d: number): number;
export function wqcm_new(a: number, b: number, c: number, d: number): number;
export function wdop_new(a: number, b: number, c: number, d: number): number;
export function wqop_new(a: number, b: number, c: number, d: number): number;
export function wdml_new(a: number, b: number, c: number, d: number): number;
export function wqml_new(a: number, b: number, c: number, d: number): number;
export function wddv_new(a: number, b: number, c: number, d: number): number;
export function wqdv_new(a: number, b: number, c: number, d: number): number;
export function wdmd_new(a: number, b: number, c: number, d: number): number;
export function wqmd_new(a: number, b: number, c: number, d: number): number;
export function wdam_new(a: number, b: number, c: number, d: number): number;
export function wqam_new(a: number, b: number, c: number, d: number): number;
export function wdmm_new(a: number, b: number, c: number, d: number): number;
export function wqmm_new(a: number, b: number, c: number, d: number): number;
export function mldv_rd(a: number): number;
export function meq_rd(a: number): number;
export function ccp_rd(a: number): number;
export function log_rd(a: number): number;
export function logd_rd(a: number): number;
export function srwq_rd(a: number): number;
export function swwq_rd(a: number): number;
export function tro_rd(a: number): number;
export function smo_rd(a: number): number;
export function jnef_imm06(a: number): number;
export function jneb_imm06(a: number): number;
export function wdcm_imm06(a: number): number;
export function wqcm_imm06(a: number): number;
export function wdop_imm06(a: number): number;
export function wqop_imm06(a: number): number;
export function wdml_imm06(a: number): number;
export function wqml_imm06(a: number): number;
export function wddv_imm06(a: number): number;
export function wqdv_imm06(a: number): number;
export function wdmd_rd(a: number): number;
export function wqmd_rd(a: number): number;
export function wdam_rd(a: number): number;
export function wqam_rd(a: number): number;
export function wdmm_rd(a: number): number;
export function wqmm_rd(a: number): number;
export function __wbg_and_free(a: number): void;
export function __wbg_div_free(a: number): void;
export function __wbg_eq_free(a: number): void;
export function __wbg_exp_free(a: number): void;
export function __wbg_gt_free(a: number): void;
export function __wbg_lt_free(a: number): void;
export function __wbg_mlog_free(a: number): void;
export function __wbg_mroo_free(a: number): void;
export function __wbg_mod_free(a: number): void;
export function __wbg_move_free(a: number): void;
export function __wbg_mul_free(a: number): void;
export function __wbg_not_free(a: number): void;
export function __wbg_or_free(a: number): void;
export function __wbg_sll_free(a: number): void;
export function __wbg_srl_free(a: number): void;
export function __wbg_sub_free(a: number): void;
export function __wbg_xor_free(a: number): void;
export function __wbg_mldv_free(a: number): void;
export function __wbg_ret_free(a: number): void;
export function __wbg_retd_free(a: number): void;
export function __wbg_aloc_free(a: number): void;
export function __wbg_mcl_free(a: number): void;
export function __wbg_mcp_free(a: number): void;
export function __wbg_meq_free(a: number): void;
export function __wbg_bhsh_free(a: number): void;
export function __wbg_bhei_free(a: number): void;
export function __wbg_burn_free(a: number): void;
export function __wbg_call_free(a: number): void;
export function __wbg_ccp_free(a: number): void;
export function __wbg_croo_free(a: number): void;
export function __wbg_csiz_free(a: number): void;
export function __wbg_cb_free(a: number): void;
export function __wbg_ldc_free(a: number): void;
export function __wbg_log_free(a: number): void;
export function __wbg_logd_free(a: number): void;
export function __wbg_mint_free(a: number): void;
export function __wbg_rvrt_free(a: number): void;
export function __wbg_scwq_free(a: number): void;
export function __wbg_srw_free(a: number): void;
export function __wbg_srwq_free(a: number): void;
export function __wbg_sww_free(a: number): void;
export function __wbg_swwq_free(a: number): void;
export function __wbg_tr_free(a: number): void;
export function __wbg_tro_free(a: number): void;
export function __wbg_ecr_free(a: number): void;
export function __wbg_k256_free(a: number): void;
export function __wbg_s256_free(a: number): void;
export function __wbg_time_free(a: number): void;
export function __wbg_noop_free(a: number): void;
export function __wbg_flag_free(a: number): void;
export function __wbg_bal_free(a: number): void;
export function __wbg_jmp_free(a: number): void;
export function __wbg_jne_free(a: number): void;
export function __wbg_smo_free(a: number): void;
export function __wbg_addi_free(a: number): void;
export function __wbg_andi_free(a: number): void;
export function __wbg_divi_free(a: number): void;
export function __wbg_expi_free(a: number): void;
export function __wbg_modi_free(a: number): void;
export function __wbg_muli_free(a: number): void;
export function __wbg_ori_free(a: number): void;
export function __wbg_slli_free(a: number): void;
export function __wbg_srli_free(a: number): void;
export function __wbg_subi_free(a: number): void;
export function __wbg_xori_free(a: number): void;
export function __wbg_jnei_free(a: number): void;
export function __wbg_lb_free(a: number): void;
export function __wbg_lw_free(a: number): void;
export function __wbg_sb_free(a: number): void;
export function __wbg_sw_free(a: number): void;
export function __wbg_mcpi_free(a: number): void;
export function __wbg_gtf_free(a: number): void;
export function __wbg_mcli_free(a: number): void;
export function __wbg_gm_free(a: number): void;
export function __wbg_movi_free(a: number): void;
export function __wbg_jnzi_free(a: number): void;
export function __wbg_jmpf_free(a: number): void;
export function __wbg_jmpb_free(a: number): void;
export function __wbg_jnzf_free(a: number): void;
export function __wbg_jnzb_free(a: number): void;
export function __wbg_jnef_free(a: number): void;
export function __wbg_jneb_free(a: number): void;
export function __wbg_ji_free(a: number): void;
export function __wbg_cfei_free(a: number): void;
export function __wbg_cfsi_free(a: number): void;
export function __wbg_cfe_free(a: number): void;
export function __wbg_cfs_free(a: number): void;
export function __wbg_wdcm_free(a: number): void;
export function __wbg_wqcm_free(a: number): void;
export function __wbg_wdop_free(a: number): void;
export function __wbg_wqop_free(a: number): void;
export function __wbg_wdml_free(a: number): void;
export function __wbg_wqml_free(a: number): void;
export function __wbg_wddv_free(a: number): void;
export function __wbg_wqdv_free(a: number): void;
export function __wbg_wdmd_free(a: number): void;
export function __wbg_wqmd_free(a: number): void;
export function __wbg_wdam_free(a: number): void;
export function __wbg_wqam_free(a: number): void;
export function __wbg_wdmm_free(a: number): void;
export function __wbg_wqmm_free(a: number): void;
export function and_rc(a: number): number;
export function div_rc(a: number): number;
export function eq_rc(a: number): number;
export function exp_rc(a: number): number;
export function gt_rc(a: number): number;
export function lt_rc(a: number): number;
export function mlog_rc(a: number): number;
export function mroo_rc(a: number): number;
export function mod_rc(a: number): number;
export function mul_rc(a: number): number;
export function or_rc(a: number): number;
export function sll_rc(a: number): number;
export function srl_rc(a: number): number;
export function sub_rc(a: number): number;
export function xor_rc(a: number): number;
export function mldv_rc(a: number): number;
export function mcp_rc(a: number): number;
export function meq_rc(a: number): number;
export function call_rc(a: number): number;
export function ccp_rc(a: number): number;
export function ldc_rc(a: number): number;
export function log_rc(a: number): number;
export function logd_rc(a: number): number;
export function scwq_rc(a: number): number;
export function srw_rc(a: number): number;
export function srwq_rc(a: number): number;
export function sww_rc(a: number): number;
export function swwq_rc(a: number): number;
export function tr_rc(a: number): number;
export function tro_rc(a: number): number;
export function ecr_rc(a: number): number;
export function k256_rc(a: number): number;
export function s256_rc(a: number): number;
export function bal_rc(a: number): number;
export function jne_rc(a: number): number;
export function smo_rc(a: number): number;
export function jnef_rc(a: number): number;
export function jneb_rc(a: number): number;
export function wdcm_rc(a: number): number;
export function wqcm_rc(a: number): number;
export function wdop_rc(a: number): number;
export function wqop_rc(a: number): number;
export function wdml_rc(a: number): number;
export function wqml_rc(a: number): number;
export function wddv_rc(a: number): number;
export function wqdv_rc(a: number): number;
export function wdmd_rc(a: number): number;
export function wqmd_rc(a: number): number;
export function wdam_rc(a: number): number;
export function wqam_rc(a: number): number;
export function wdmm_rc(a: number): number;
export function wqmm_rc(a: number): number;
export function __wbg_imm06_free(a: number): void;
export function __wbg_typescriptinstruction_free(a: number): void;
export function typescriptinstruction_to_bytes(a: number, b: number): void;
export function regid_new_checked(a: number): number;
export function regid_bal(): number;
export function regid_cgas(): number;
export function regid_err(): number;
export function regid_flag(): number;
export function regid_fp(): number;
export function regid_ggas(): number;
export function regid_hp(): number;
export function regid_is(): number;
export function regid_of(): number;
export function regid_one(): number;
export function regid_pc(): number;
export function regid_ret(): number;
export function regid_retl(): number;
export function regid_sp(): number;
export function regid_spp(): number;
export function regid_writable(): number;
export function regid_zero(): number;
export function regid_new_typescript(a: number): number;
export function regid_to_u8(a: number): number;
export function __wbg_regid_free(a: number): void;
export function __wbg_imm12_free(a: number): void;
export function __wbg_imm18_free(a: number): void;
export function __wbg_imm24_free(a: number): void;
export function typescriptinstruction_size(): number;
export function __wbg_compareargs_free(a: number): void;
export function __wbg_get_compareargs_mode(a: number): number;
export function __wbg_set_compareargs_mode(a: number, b: number): void;
export function __wbg_get_compareargs_indirect_rhs(a: number): number;
export function __wbg_set_compareargs_indirect_rhs(a: number, b: number): void;
export function compareargs_to_imm(a: number): number;
export function compareargs_from_imm(a: number): number;
export function __wbg_get_mathargs_op(a: number): number;
export function __wbg_set_mathargs_op(a: number, b: number): void;
export function __wbg_get_divargs_indirect_rhs(a: number): number;
export function __wbg_set_divargs_indirect_rhs(a: number, b: number): void;
export function __wbg_get_mathargs_indirect_rhs(a: number): number;
export function __wbg_get_mulargs_indirect_rhs(a: number): number;
export function __wbg_get_mulargs_indirect_lhs(a: number): number;
export function __wbg_set_mathargs_indirect_rhs(a: number, b: number): void;
export function __wbg_set_mulargs_indirect_rhs(a: number, b: number): void;
export function __wbg_set_mulargs_indirect_lhs(a: number, b: number): void;
export function __wbg_mathargs_free(a: number): void;
export function __wbg_mulargs_free(a: number): void;
export function __wbg_divargs_free(a: number): void;
export function gm_from_args(a: number, b: number): number;
export function gtf_from_args(a: number, b: number, c: number): number;
export function gm_args(a: number, b: number): number;
export function gtf_args(a: number, b: number, c: number): number;
export function wdcm_from_args(a: number, b: number, c: number, d: number): number;
export function wdop_from_args(a: number, b: number, c: number, d: number): number;
export function wdml_from_args(a: number, b: number, c: number, d: number): number;
export function wddv_from_args(a: number, b: number, c: number, d: number): number;
export function wdcm_args(a: number, b: number, c: number, d: number): number;
export function wqcm_args(a: number, b: number, c: number, d: number): number;
export function wdop_args(a: number, b: number, c: number, d: number): number;
export function wqop_args(a: number, b: number, c: number, d: number): number;
export function wdml_args(a: number, b: number, c: number, d: number): number;
export function wqml_args(a: number, b: number, c: number, d: number): number;
export function wddv_arg(a: number, b: number, c: number, d: number): number;
export function wqdv_args(a: number, b: number, c: number, d: number): number;
export function wqml_from_args(a: number, b: number, c: number, d: number): number;
export function wqdv_from_args(a: number, b: number, c: number, d: number): number;
export function wqcm_from_args(a: number, b: number, c: number, d: number): number;
export function wqop_from_args(a: number, b: number, c: number, d: number): number;
export function __wbg_panicinstruction_free(a: number): void;
export function panicinstruction_error_typescript(a: number, b: number): number;
export function panicinstruction_reason(a: number): number;
export function panicinstruction_instruction(a: number): number;
export function __wbg_address_free(a: number): void;
export function address_from_bytes(a: number, b: number): number;
export function address_zeroed(): number;
export function address_size(a: number): number;
export function assetid_from_bytes(a: number, b: number): number;
export function contractid_from_bytes(a: number, b: number): number;
export function __wbg_bytes4_free(a: number): void;
export function bytes4_from_bytes(a: number, b: number): number;
export function bytes4_zeroed(): number;
export function bytes4_size(a: number): number;
export function __wbg_bytes8_free(a: number): void;
export function bytes8_from_bytes(a: number, b: number): number;
export function bytes8_zeroed(): number;
export function bytes8_size(a: number): number;
export function __wbg_bytes20_free(a: number): void;
export function bytes20_from_bytes(a: number, b: number): number;
export function bytes20_zeroed(): number;
export function bytes20_size(a: number): number;
export function bytes32_from_bytes(a: number, b: number): number;
export function nonce_from_bytes(a: number, b: number): number;
export function messageid_from_bytes(a: number, b: number): number;
export function salt_from_bytes(a: number, b: number): number;
export function __wbg_bytes64_free(a: number): void;
export function bytes64_from_bytes(a: number, b: number): number;
export function bytes64_zeroed(): number;
export function bytes64_size(a: number): number;
export function assetid_size(a: number): number;
export function contractid_size(a: number): number;
export function bytes32_size(a: number): number;
export function nonce_size(a: number): number;
export function messageid_size(a: number): number;
export function salt_size(a: number): number;
export function assetid_zeroed(): number;
export function contractid_zeroed(): number;
export function bytes32_zeroed(): number;
export function nonce_zeroed(): number;
export function messageid_zeroed(): number;
export function salt_zeroed(): number;
export function __wbg_assetid_free(a: number): void;
export function __wbg_contractid_free(a: number): void;
export function __wbg_bytes32_free(a: number): void;
export function __wbg_nonce_free(a: number): void;
export function __wbg_messageid_free(a: number): void;
export function __wbg_salt_free(a: number): void;
export function __wbg_blockheight_free(a: number): void;
export function blockheight_to_bytes(a: number, b: number): void;
export function blockheight_as_usize(a: number): number;
export function __wbg_chainid_free(a: number): void;
export function chainid_to_bytes(a: number, b: number): void;
export function chainid_as_usize(a: number): number;
export function blockheight_from_number(a: number): number;
export function chainid_from_number(a: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
