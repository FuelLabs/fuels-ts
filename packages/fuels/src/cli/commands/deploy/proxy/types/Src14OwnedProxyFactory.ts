/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.6
*/

import { Contract, ContractFactory, decompressBytecode } from "../../../../..";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "../../../../..";

import { Src14OwnedProxy } from "./Src14OwnedProxy";

const bytecode = decompressBytecode("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");

export class Src14OwnedProxyFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, Src14OwnedProxy.abi, accountOrProvider);
  }

  deploy<TContract extends Contract = Contract>(
    deployOptions?: DeployContractOptions
  ): Promise<DeployContractResult<TContract>> {
    return super.deploy({
      storageSlots: Src14OwnedProxy.storageSlots,
      ...deployOptions,
    });
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<Src14OwnedProxy>> {
    const factory = new Src14OwnedProxyFactory(wallet);
    return factory.deploy(options);
  }
}
