/* Autogenerated file. Do not edit manually. */

/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */

/*
  Fuels version: 0.94.8
  Forc version: 0.64.0
*/


import { Contract, ContractFactory } from 'fuels';
import type { Account, Provider, DeployContractOptions, DeployContractResult, StorageSlot } from 'fuels';
import { AbiContract } from './AbiContract';
import { bytecode } from './AbiContract-bytecode';
import abi from './AbiContract-abi.json';
import storageSlots from './AbiContract-storage-slots.json';

export class AbiContractFactory extends ContractFactory<AbiContract> {

  static readonly bytecode = bytecode;
  static readonly storageSlots: StorageSlot[] = storageSlots;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, abi, accountOrProvider, AbiContractFactory.storageSlots);
  }

  static deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ) {
    const factory = new AbiContractFactory(wallet);
    return factory.deploy(options);
  }
}
