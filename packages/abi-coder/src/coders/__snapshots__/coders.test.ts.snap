// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArrayCoder as a [u8; 0] can encode [] then decode [] 1`] = `"0x"`;

exports[`ArrayCoder as a [u8; 4] can encode [0, 13, 37, 255] then decode [0, 13, 37, 255] 1`] = `"0x0000000000000000000000000000000d000000000000002500000000000000ff"`;

exports[`B256Coder as a b256 can encode "0x0000000000000000000000000000000000000000000000000000000000000000" then decode "0x0000000000000000000000000000000000000000000000000000000000000000" 1`] = `"0x0000000000000000000000000000000000000000000000000000000000000000"`;

exports[`B256Coder as a b256 can encode "0xd5579c46dfcc7f18207013e65b44e4cb4e2c2298f4ac457ba8f82743f31e930b" then decode "0xd5579c46dfcc7f18207013e65b44e4cb4e2c2298f4ac457ba8f82743f31e930b" 1`] = `"0xd5579c46dfcc7f18207013e65b44e4cb4e2c2298f4ac457ba8f82743f31e930b"`;

exports[`B512Coder as a b512 can encode "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" then decode "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" 1`] = `"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"`;

exports[`B512Coder as a b512 can encode "0x8e9dda6f7793745ac5aacf9e907cae30b2a01fdf0d23b7750a85c6a44fca0c29f0906f9d1f1e92e6a1fb3c3dcef3cc3b3cdbaae27e47b9d9a4c6a4fce4cf16b2" then decode "0x8e9dda6f7793745ac5aacf9e907cae30b2a01fdf0d23b7750a85c6a44fca0c29f0906f9d1f1e92e6a1fb3c3dcef3cc3b3cdbaae27e47b9d9a4c6a4fce4cf16b2" 1`] = `"0x8e9dda6f7793745ac5aacf9e907cae30b2a01fdf0d23b7750a85c6a44fca0c29f0906f9d1f1e92e6a1fb3c3dcef3cc3b3cdbaae27e47b9d9a4c6a4fce4cf16b2"`;

exports[`BooleanCoder as a boolean can encode false then decode false 1`] = `"0x0000000000000000"`;

exports[`BooleanCoder as a boolean can encode true then decode true 1`] = `"0x0000000000000001"`;

exports[`ByteCoder as a byte can encode "0x0" then decode 0 1`] = `"0x0000000000000000"`;

exports[`ByteCoder as a byte can encode "0xff" then decode 255 1`] = `"0x00000000000000ff"`;

exports[`ByteCoder as a byte can encode 0 then decode 0 1`] = `"0x0000000000000000"`;

exports[`ByteCoder as a byte can encode 255 then decode 255 1`] = `"0x00000000000000ff"`;

exports[`EnumCoder as a [enum TestEnum; 4] can encode [[Object], [Object], [Object], [Object]] then decode [[Object], [Object], [Object], [Object]] 1`] = `"0x000000000000000000000000000000000000000000000539000000000000000100000000000005390000000000000539000000000000000000000000000000000000000000000539000000000000000100000000000005390000000000000539"`;

exports[`EnumCoder as a enum TestEnum can encode {"a": true} then decode {"a": true} 1`] = `"0x00000000000000000000000000000001"`;

exports[`EnumCoder as a enum TestEnum can encode {"b": [BN]} then decode {"b": [BN]} 1`] = `"0x00000000000000010000000000000539"`;

exports[`NumberCoder as a u8 can encode 0 then decode 0 1`] = `"0x0000000000000000"`;

exports[`NumberCoder as a u8 can encode 255 then decode 255 1`] = `"0x00000000000000ff"`;

exports[`NumberCoder as a u16 can encode 0 then decode 0 1`] = `"0x0000000000000000"`;

exports[`NumberCoder as a u16 can encode 65535 then decode 65535 1`] = `"0x000000000000ffff"`;

exports[`NumberCoder as a u32 can encode 0 then decode 0 1`] = `"0x0000000000000000"`;

exports[`NumberCoder as a u32 can encode 4294967295 then decode 4294967295 1`] = `"0x00000000ffffffff"`;

exports[`NumberCoder as a u64 can encode "0x64" then decode "0x64" 1`] = `"0x0000000000000064"`;

exports[`NumberCoder as a u64 can encode "0xff" then decode "0xff" 1`] = `"0x00000000000000ff"`;

exports[`NumberCoder as a u64 can encode "0xffffffffffffffff" then decode "0xffffffffffffffff" 1`] = `"0xffffffffffffffff"`;

exports[`NumberCoder as a u64 can encode 0 then decode "0x0" 1`] = `"0x0000000000000000"`;

exports[`NumberCoder as a u64 can encode 65535 then decode "0xffff" 1`] = `"0x000000000000ffff"`;

exports[`NumberCoder as a u64 can encode 4294967295 then decode "0xffffffff" 1`] = `"0x00000000ffffffff"`;

exports[`StringCoder as a str[0] can encode "" then decode "" 1`] = `"0x"`;

exports[`StringCoder as a str[255] can encode "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" then decode "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" 1`] = `"0x`;

exports[`StructCoder as a struct TestStruct can encode {"a": true, "b": [BN]} then decode {"a": true, "b": [BN]} 1`] = `"0x00000000000000010000000000000539"`;

exports[`StructCoder as a struct TestStruct can encode {"a": true, "b": 1337} then decode {"a": true, "b": [BN]} 1`] = `"0x00000000000000010000000000000539"`;

exports[`StructCoder as a struct TestStruct can encode {} then decode {} 1`] = `"0x"`;

exports[`TupleCoder as a () can encode [] then decode [] 1`] = `"0x"`;

exports[`TupleCoder as a (u64, u64) can encode [13, 37] then decode [[BN], [BN]] 1`] = `"0x000000000000000d0000000000000025"`;
