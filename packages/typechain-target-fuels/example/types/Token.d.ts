/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Interface, FunctionFragment } from '@fuels-ts/abi-coder';
import { Contract } from '@fuels-ts/contract';
import { BigNumberish } from '@ethersproject/bignumber';
import { BytesLike } from '@ethersproject/bytes';

interface TokenInterface extends Interface {
  functions: {
    'mint(u64,u64,b256,(b256,u64))': FunctionFragment;
    'send(u64,u64,b256,(b256,b256,u64))': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'mint',
    values: [BigNumberish, BigNumberish, string, { reciever: string; amount: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: 'send',
    values: [
      BigNumberish,
      BigNumberish,
      string,
      { sender: string; reciever: string; amount: BigNumberish }
    ]
  ): string;

  decodeFunctionResult(functionFragment: 'mint', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'send', data: BytesLike): Result;
}

export class Token extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  interface: TokenInterface;
  functions: {
    mint(
      gas: BigNumberish,
      coins: BigNumberish,
      color: string,
      args: { reciever: string; amount: BigNumberish },
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    send(
      gas: BigNumberish,
      coins: BigNumberish,
      color: string,
      args: { sender: string; reciever: string; amount: BigNumberish },
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  mint(
    gas: BigNumberish,
    coins: BigNumberish,
    color: string,
    args: { reciever: string; amount: BigNumberish },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  send(
    gas: BigNumberish,
    coins: BigNumberish,
    color: string,
    args: { sender: string; reciever: string; amount: BigNumberish },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;
}
