/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, Wallet, AbstractAddress } from "fuels";
import { Demo, DemoInterface } from "../Demo";
const _abi = [
  {
    inputs: [
      {
        name: "name",
        type: "[str[12]; 2]",
      },
      {
        name: "addresses",
        type: "[address; 2]",
      },
      {
        name: "foo",
        type: "bool",
      },
    ],
    name: "name",
    outputs: [],
    type: "function",
  },
  {
    inputs: [
      {
        name: "person",
        type: "(u8)",
        components: [
          {
            name: "__tuple_element",
            type: "str[20]",
          },
          {
            name: "__tuple_element",
            type: "address",
          },
        ],
      },
    ],
    name: "tuple_function",
    outputs: [],
    type: "function",
  },
  {
    name: "void_return_function",
    inputs: [],
    outputs: [],
    type: "function",
  },
];

export class Demo__factory {
  static readonly abi = _abi;
  static createInterface(): DemoInterface {
    return new DemoInterface(_abi);
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: Wallet | Provider
  ): Demo {
    return new Demo(id, _abi, walletOrProvider);
  }
}
