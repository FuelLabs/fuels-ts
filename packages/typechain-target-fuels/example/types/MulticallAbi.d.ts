/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
} from "fuels";

import type { SwayEnum } from "./common";

export type ContractIdInput = { value: string };

export type ContractIdOutput = { value: string };

export type CallInput = {
  contract_id: ContractIdInput;
  fn_selector: BigNumberish;
  fn_arg: CallArgInput;
  amount: BigNumberish;
  asset_id: string;
};

export type CallOutput = {
  contract_id: ContractIdOutput;
  fn_selector: bigint;
  fn_arg: CallArgOutput;
  amount: bigint;
  asset_id: string;
};

export type ScriptDataInput = {
  calls: [OptionInput, OptionInput, OptionInput, OptionInput, OptionInput];
};

export type ScriptDataOutput = {
  calls: [OptionOutput, OptionOutput, OptionOutput, OptionOutput, OptionOutput];
};

export type ScriptReturnInput = {
  call_returns: [
    OptionInput,
    OptionInput,
    OptionInput,
    OptionInput,
    OptionInput
  ];
};

export type ScriptReturnOutput = {
  call_returns: [
    OptionOutput,
    OptionOutput,
    OptionOutput,
    OptionOutput,
    OptionOutput
  ];
};

export type CallArgInput = SwayEnum<{
  Value: BigNumberish;
  Reference: BigNumberish;
}>;

export type CallArgOutput = SwayEnum<{ Value: bigint; Reference: bigint }>;

export type OptionInput = SwayEnum<{ Some: CallInput; None: [] }>;

export type OptionOutput = SwayEnum<{ Some: CallOutput; None: [] }>;

export type CallReturnInput = SwayEnum<{
  Value: BigNumberish;
  Reference: [BigNumberish, BigNumberish];
}>;

export type CallReturnOutput = SwayEnum<{
  Value: bigint;
  Reference: [bigint, bigint];
}>;

interface MulticallAbiInterface extends Interface {
  functions: {
    main: FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "main",
    values: [ScriptDataInput]
  ): Uint8Array;

  decodeFunctionData(functionFragment: "main", data: BytesLike): DecodedValue;
}

export class MulticallAbi extends Contract {
  interface: MulticallAbiInterface;
  functions: {
    main: InvokeFunction<[script_data: ScriptDataInput], ScriptReturnOutput>;
  };
}
