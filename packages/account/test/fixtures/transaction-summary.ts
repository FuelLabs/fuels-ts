import type { JsonAbi } from '@fuel-ts/abi-coder';
import { bn } from '@fuel-ts/math';
import type {
  InputCoin,
  InputContract,
  InputMessage,
  OutputChange,
  OutputCoin,
  OutputContract,
  OutputContractCreated,
  OutputVariable,
  Transaction,
} from '@fuel-ts/transactions';
import { InputType, OutputType, ReceiptType, TransactionType } from '@fuel-ts/transactions';

import type {
  TransactionResultCallReceipt,
  TransactionResultReturnReceipt,
  TransactionResultTransferReceipt,
  TransactionResultTransferOutReceipt,
  TransactionResultReturnDataReceipt,
  TransactionResultMessageOutReceipt,
  TransactionResultScriptResultReceipt,
  AbiMap,
  SuccessStatus,
  FailureStatus,
  SubmittedStatus,
  SqueezedOutStatus,
  PreconfirmationSuccessStatus,
  PreconfirmationFailureStatus,
} from '../../src';

export const MOCK_INPUT_COIN: InputCoin = {
  amount: bn(4999989993),
  assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',
  owner: '0x3e7ddda4d0d3f8307ae5f1aed87623992c1c4decefec684936960775181b2302',
  predicateGasUsed: bn(0),
  predicate: '0x',
  predicateData: '0x',
  predicateDataLength: bn(0),
  predicateLength: bn(0),
  txPointer: { blockHeight: 0, txIndex: 0 },
  type: InputType.Coin,
  txID: '0xf23da6e1d6a55d05f2a0ebbb90b6b161d9e70f1723680f610f08c98279bc6855',
  outputIndex: 1,
  witnessIndex: 0,
};
export const MOCK_INPUT_CONTRACT: InputContract = {
  balanceRoot: '0x0000000000000000000000000000000000000000000000000000000000000000',
  contractID: '0x0a98320d39c03337401a4e46263972a9af6ce69ec2f35a5420b1bd35784c74b1',
  stateRoot: '0x0000000000000000000000000000000000000000000000000000000000000000',
  txPointer: {
    blockHeight: 0,
    txIndex: 0,
  },
  type: InputType.Contract,
  outputIndex: 0,
  txID: '0xf23da6e1d6a55d05f2a0ebbb90b6b161d9e70f1723680f610f08c98279bc6855',
};

export const MOCK_INPUT_MESSAGE: InputMessage = {
  amount: bn.parseUnits('0.001'),
  data: '0x',
  dataLength: 0,
  nonce: '0x02',
  predicate: '0x',
  predicateGasUsed: bn(0),
  predicateData: '0x',
  predicateDataLength: bn(0),
  predicateLength: bn(0),
  recipient: '0x06300e686a5511c7ba0399fc68dcbe0ca2d8f54f7e6afea73c505dd3bcacf33b',
  sender: '0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266',
  type: InputType.Message,
  witnessIndex: 0,
};

export const MOCK_OUTPUT_COIN: OutputCoin = {
  type: OutputType.Coin,
  to: '0xf65d6448a273b531ee942c133bb91a6f904c7d7f3104cdaf6b9f7f50d3518871',
  amount: bn(1),
  assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',
};

export const MOCK_OUTPUT_CONTRACT: OutputContract = {
  type: OutputType.Contract,
  inputIndex: 0,
  balanceRoot: '0x0000000000000000000000000000000000000000000000000000000000000000',
  stateRoot: '0x0000000000000000000000000000000000000000000000000000000000000000',
};

export const MOCK_OUTPUT_CHANGE: OutputChange = {
  type: OutputType.Change,
  to: '0x3e7ddda4d0d3f8307ae5f1aed87623992c1c4decefec684936960775181b2302',
  amount: bn(4899989992),
  assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',
};

export const MOCK_OUTPUT_VARIABLE: OutputVariable = {
  type: OutputType.Variable,
  to: '0x3e7ddda4d0d3f8307ae5f1aed87623992c1c4decefec684936960775181b2302',
  amount: bn(100000000),
  assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',
};

export const MOCK_OUTPUT_CONTRACT_CREATED: OutputContractCreated = {
  type: OutputType.ContractCreated,
  contractId: '0xef066899413ef8dc7c3073a50868bafb3d039d9bad8006c2635b7f0efa992553',
  stateRoot: '0x1494a821f0dac0da6978dd03fbb5d02910d184a17cb7ff895fc0aa750bab88ea',
};

export const MOCK_RECEIPT_CALL: TransactionResultCallReceipt = {
  type: ReceiptType.Call,
  id: '0x0000000000000000000000000000000000000000000000000000000000000000',
  to: '0x0a98320d39c03337401a4e46263972a9af6ce69ec2f35a5420b1bd35784c74b1',
  amount: bn(100000000),
  assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',
  gas: bn('0x5f56dca'),
  param1: bn('0x6b0a60fc'),
  param2: bn('0x3868'),
  pc: bn('0x4370'),
  is: bn('0x4370'),
};

export const MOCK_RECEIPT_RETURN: TransactionResultReturnReceipt = {
  type: ReceiptType.Return,
  id: '0x0000000000000000000000000000000000000000000000000000000000000000',
  val: bn(0),
  pc: bn('0x2868'),
  is: bn('0x2868'),
};

export const MOCK_RECEIPT_TRANSFER: TransactionResultTransferReceipt = {
  type: ReceiptType.Transfer,
  id: '0x0000000000000000000000000000000000000000000000000000000000000000',
  to: '0xaab4884920fa4d3a35fc2977cc442b0caddf87e001ef62321b6c02f5ab0f4115',
  amount: bn(988),
  assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',
  pc: bn(10360),
  is: bn(10344),
};

export const MOCK_RECEIPT_TRANSFER_OUT: TransactionResultTransferOutReceipt = {
  type: ReceiptType.TransferOut,
  id: '0x0a98320d39c03337401a4e46263972a9af6ce69ec2f35a5420b1bd35784c74b1',
  to: '0x3e7ddda4d0d3f8307ae5f1aed87623992c1c4decefec684936960775181b2302',
  amount: bn(100000000),
  assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',
  pc: bn('0x57dc'),
  is: bn('0x4370'),
};

export const MOCK_RECEIPT_RETURN_DATA_1: TransactionResultReturnDataReceipt = {
  type: ReceiptType.ReturnData,
  id: '0x0a98320d39c03337401a4e46263972a9af6ce69ec2f35a5420b1bd35784c74b1',
  ptr: bn('0x66e0'),
  len: bn('0x58'),
  digest: '0x2ff699ad2d07577eef288783f7a7d4f41f8e8837178c42f603a2f8799145a053',
  pc: bn('0x58'),
  is: bn('0x3'),
  data: '0x000000000000000300000000000000050000000005f5e10000000000000000003e7ddda4d0d3f8307ae5f1aed87623992c1c4decefec684936960775181b23024d79206576656e7400000000000000000000000000000001',
};

export const MOCK_RECEIPT_RETURN_DATA_2: TransactionResultReturnDataReceipt = {
  type: ReceiptType.ReturnData,
  id: '0x0000000000000000000000000000000000000000000000000000000000000000',
  ptr: bn('0x3fffd70'),
  len: bn('0xf8'),
  digest: '0x31120b8025b758fa96c911171d8211e53eb256f2ecc9b45c657c0ddfe6241ef5',
  pc: bn('0xf8'),
  is: bn('0x1'),
  data: '0x000000000000000100000000000000010000000000000000000000000000005800000000000000000000000005f563ca00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c400000000005f5e1000000000000003d1800000000000000000000000000003c9000000000000035980000000000003ae8000000000000000300000000000000050000000005f5e10000000000000000003e7ddda4d0d3f8307ae5f1aed87623992c1c4decefec684936960775181b23024d79206576656e7400000000000000000000000000000001',
};

export const MOCK_RECEIPT_MESSAGE_OUT: TransactionResultMessageOutReceipt = {
  type: ReceiptType.MessageOut,
  messageId: '0x609a3e324753376cdbb64627d7365a5e039e522c584f73a3bf5ece00509cd24f',
  sender: '0x4aec2335430f52d0314a03b244d285c675d790dfbf0bc853fd31e39548ad8b7d',
  recipient: '0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266',
  amount: bn.parseUnits('0.001'),
  nonce: '0x66c4d70c08ff30cd2d9dae0b6fd05972997579328529bb0605dd604afedfdf93',
  digest: '0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
  len: 0,
  data: new Uint8Array(),
};

export const MOCK_RECEIPT_SCRIPT_RESULT: TransactionResultScriptResultReceipt = {
  type: ReceiptType.ScriptResult,
  result: bn(0),
  gasUsed: bn(167824),
};

export const MOCK_TRANSACTION_RAWPAYLOAD =
  '0x000000000000000000000000000003e8d5579c46dfcc7f18207013e65b44e4cb4e2c2298f4ac457ba8f82743f31e930b000000000000002000000000000000200000000000000005000000000000000000000000000000000000000000000000d5579c46dfcc7f18207013e65b44e4cb4e2c2298f4ac457ba8f82743f31e930bd5579c46dfcc7f18207013e65b44e4cb4e2c2298f4ac457ba8f82743f31e930b00000000000003e800000000000003e8';

export const MOCK_ABI_MAP: AbiMap = {
  '0x17a88dcb90a4b5df7433200c7eb7bd47015079b90043f197d64977443396f1c2': {
    types: [
      {
        typeId: 0,
        type: '()',
        components: [],
        typeParameters: null,
      },
      {
        typeId: 1,
        type: 'b256',
        components: null,
        typeParameters: null,
      },
      {
        typeId: 2,
        type: 'struct Address',
        components: [
          {
            name: 'value',
            type: 1,
            typeArguments: null,
          },
        ],
        typeParameters: null,
      },
      {
        typeId: 3,
        type: 'u64',
        components: null,
        typeParameters: null,
      },
    ],
    functions: [
      {
        inputs: [
          {
            name: 'amount',
            type: 3,
            typeArguments: null,
          },
          {
            name: 'address',
            type: 2,
            typeArguments: null,
          },
          {
            name: 'amount2',
            type: 3,
            typeArguments: null,
          },
        ],
        name: 'mint_to_address',
        output: {
          name: '',
          type: 0,
          typeArguments: null,
        },
        attributes: [
          {
            name: 'storage',
            arguments: ['read', 'write'],
          },
        ],
      },
    ],
    loggedTypes: [],
    messagesTypes: [],
    configurables: [],
  } as unknown as JsonAbi, // used in skipped test
  // packages/account/src/providers/transaction-summary/operations.test.ts
  // "should ensure getContractCallOperations return contract call operations with calls details"
  // when the test is unskipped, it'll fail and this mock can be adjusted or deleted
};

export const CONTRACT_CALL_ABI =
  MOCK_ABI_MAP['0x17a88dcb90a4b5df7433200c7eb7bd47015079b90043f197d64977443396f1c2'];

export const MOCK_ABIMAP = {
  [MOCK_INPUT_CONTRACT.contractID]: CONTRACT_CALL_ABI,
};

export const MOCK_TRANSACTION: Transaction = {
  scriptGasLimit: bn(100000000),
  inputsCount: 3,
  inputs: [MOCK_INPUT_CONTRACT, MOCK_INPUT_COIN],
  outputsCount: 3,
  outputs: [MOCK_OUTPUT_CONTRACT, MOCK_OUTPUT_VARIABLE, MOCK_OUTPUT_CHANGE],
  receiptsRoot: '0x80fc095e6c66a2deb42087bd63e5490f79b650d2cd245f7771e6bae51dcd4aec',
  script: '0x9000000447000000000000000000',
  scriptData: '0x00000000000000010a98320d39c03337401a4e46263972a9af6ce69ec2f35a5420b1bd35784c74',
  scriptDataLength: bn(80),
  scriptLength: bn(30),
  type: TransactionType.Script,
};

export const MOCK_SUCCESS_STATUS: SuccessStatus = {
  time: '4611686020122012518',
  type: 'SuccessStatus',
  block: {
    id: '0x123',
  },
  receipts: [],
  totalFee: '1000',
  totalGas: '1000',
};

export const MOCK_FAILURE_STATUS: FailureStatus = {
  type: 'FailureStatus',
  block: {
    id: '0x123',
  },
  reason: 'reason',
  time: '4611686020122012535',
  receipts: [],
  totalFee: '1000',
  totalGas: '1000',
};

export const MOCK_SUBMITTED_STATUS: SubmittedStatus = {
  time: '4611686020122012562',
  type: 'SubmittedStatus',
};

export const MOCK_SQUEEZEDOUT_STATUS: SqueezedOutStatus = {
  type: 'SqueezedOutStatus',
  reason: 'Transaction removed.',
};

export const MOCK_PRECONFIRMATION_SUCCESS_STATUS: PreconfirmationSuccessStatus = {
  type: 'PreconfirmationSuccessStatus',
  totalFee: '1000',
  totalGas: '1000',
};

export const MOCK_PRECONFIRMATION_FAILURE_STATUS: PreconfirmationFailureStatus = {
  type: 'PreconfirmationFailureStatus',
  reason: 'Transaction not accepted to the mempool.',
  totalFee: '1000',
  totalGas: '1000',
};

export const MOCK_TX_SCRIPT_RAW_PAYLOAD =
  '0x000000000000000000000000000002ddc27a4ce0f152478cf32027140179d8a65aa85bae900a0054c5afdeb69503c4f00000000000000004000000000000000000000000000000090000000000000001000000000000000200000000000000012400000000000000000000000000000000000000000003770000000000000000a4d42cbb02adb32f5f3a9eab33a0ee7bdab8910ad9f615dfc86a7bb9e49a732b00000000000000005d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4effffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b627b411e4687c2f90d8a4779337b0e5f32b864e37c8630213f05fc682d34b680000000005f5e100000000000000000000000000000000000000000000000000000000000000000000000000000000025d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4efffffffffa0a1b88000000000000000000000000000000000000000000000000000000000000000000000000000000407eab045eaa91049cc09cf7fcb2c993e249d5775645fb5d4738cb5c30665983a348dab1e09dd66ac9b40f0e7be099e967a6d6380aaa6e3c1793b8630e998049d6';
export const MOCK_TX_CREATE_RAW_PAYLOAD =
  '0x00000000000000010000000000000000b100016b3e4e6c6ec572832e5cd9b5bd9162d1371f932ee28c5a61f5a8607f7e0000000000000000000000000000000900000000000000010000000000000002000000000000000200000000000000000000000000000754000000000000000002cc837ec4516621729d615acb83b4871b34b59772c9ad42674f24cbf232f25b0000000000000000a1bfd8f997bb7654af676f6d8a9ebda7eb1ab63426d7f3e5745fdc1672f0031000000000004c4b4000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000e00000000000000010000000000000000000000000000000000000000000000000000000000000004181c794f94f71f983a1cb57b18ee43be3d1d3a74aa2e3ed4c9e50687a18f015600000000000000000000000000000000000000000000000000000000000000000000000000000002a1bfd8f997bb7654af676f6d8a9ebda7eb1ab63426d7f3e5745fdc1672f0031000000000004c43ec00000000000000000000000000000000000000000000000000000000000000000000000000000594740000034700000000000000000003945dfcc00110fff3005d4060495d47f03213490440764800085d47f033134904407648007c5d47f03413490440764800bf72f0007b36f000001aec5000910001405d43f035104103005fec00005047b00f5e4410005d47f03610451300504bb010724c0020284914c05053b0505fec000a5045400f5e4410005057b03072440020285504405043b0605fec100c5045000f5c4bf0905e4520005047b0705e440000504910085c4ff0985e493000504910105c4ff0a05e4930005d4bf0155fed201150491020724c0010284944c050491030724c0020284954c05045105072480010284504805d43f0371041030072440010340004117240001034001ed05d43f038104103005d47f01672480010340114125043b0105d47f01772480020340114125d43f039104103005d47f01872480008340114125043b0705d47f01972480060340114125d43f03a104103005d47f01a72480010340114125043b0705c4100005d47f01b334110005d43f03b104103005d47f01c72480010340114125043b0105047b0d05d4bf0165fed201a5049100f5c4ff0905e493000504bb0e05c4ff0e85e493000504d20085c53f0f05e4d4000504d20105c53f0f85e4d40005d4ff0205fed301f504d202072500010284fb500504d203072500020284d05005041205072480010284114805043b0e05d47f02172480060340114125d43f03c104103005d47f02272480008340114125c43f090244000001aec5000910001305d40604a5d4900005d4d00015d43f035104103005fec00005047b00f5e4410005047b120725000102847b5005047b0305fec00065051100f5e5010005053b01072540020285105405057b0405fec10085041500f5c5bf0905e416000505bb0505e580000504160085c5ff0985e417000504160105c5ff0a05e4170005d43f0155fed000d50416020725c0010284115c0504160307244002028414440504160507244001028415440134124c05047b050134100007640000e5d43f03d104103005d4bf025724c0010340124135043b120504bb110724c0010284904c05d43f026724c0010340104935c43f090244000005043b0b072480060284114805d47f02772480060340114125d43f028364000001aec5000910000305d40604a5c450000504100085d4bf03e104923005d4ff03072500018340134947248002028ed04805d43f0315fed00045fed10055d43f03f104103001a44a0002dec04115c43f0902440000047000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00fffffffffffffffffffffffffffff47616d65205374617465000000000000436f6e7472616374204964000000000047616d652052656647616d65205265662053636f726500004469726563742047616d6500000000005761732054727565010000000000000064000000000000000a000000000000000000000000018af8000000000000000200000000000000030000000000000004000000000000000500000000000000060000000000000007000000000000000865000000000000000c00000000000000030000000000000000000000000201570000000000000009000000000000000a48656c6c6f2054657374657200000000000000000000000d000000000000000e000000000000000cffffffffffff000048656c6c6f2066726f6d206d61696e20436f6e74726163740000000000000000000000000000000000000000000000000000000000000000000000000000000f00000000b1abb86f000000002151bd4b00000000fdbf0f6a0000000045b1551100000000000003b4000000000000039400000000000003d400000000000003e400000000000003f400000000000003fc000000000000040c000000000000041c00000000000004ac00000000000004dc00000000000004f400000000000000000000004041836759e99b4bd0b1a8d9a622e091bf15cbfe9f975dacc38334dfb084ced1c55d58b4e5b4072d22fd3279bf90b1f3bf6429ce4096626905037cccbc05bec7e4';
export const MOCK_TX_MINT_RAW_PAYLOAD =
  '0x
export const MOCK_TX_UNKNOWN_RAW_PAYLOAD =
  '0x
