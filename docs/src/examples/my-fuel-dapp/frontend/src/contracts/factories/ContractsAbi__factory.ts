/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, Wallet } from "fuels";
import { Interface, Contract } from "fuels";
import type { ContractsAbi, ContractsAbiInterface } from "../ContractsAbi";
const _abi = [
  {
    type: "function",
    inputs: [],
    name: "counter",
    outputs: [
      {
        name: "",
        type: "u64",
        components: null,
        typeArguments: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "param",
        type: "u64",
        components: null,
        typeArguments: null,
      },
    ],
    name: "increment",
    outputs: [
      {
        name: "",
        type: "u64",
        components: null,
        typeArguments: null,
      },
    ],
  },
];

export class ContractsAbi__factory {
  static readonly abi = _abi;
  static createInterface(): ContractsAbiInterface {
    return new Interface(_abi) as ContractsAbiInterface;
  }
  static connect(
    id: string,
    walletOrProvider: Wallet | Provider
  ): ContractsAbi {
    return new Contract(id, _abi, walletOrProvider) as ContractsAbi;
  }
}
